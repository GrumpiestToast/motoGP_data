{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import re\n",
    "import numpy as np\n",
    "import time\n",
    "from collections import defaultdict\n",
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Headers for all the data we will be scraping in this notebook\n",
    "headers = ['Year','TRK','Track','Category','Session','Date','Track_Condition','Track_Temp','Air_Temp',\n",
    "           'Humidity','Position','Points','Rider_Number','Rider_Name','Nationality','Team_Name',\n",
    "           'Bike','Avg_Speed','Time']\n",
    "headers2 = ['Track', \"Trk Length\", 'Left_Corners', 'Right_Corners', 'track_width', 'length of longest straight', 'MotoGP_avg_speed', 'GP_distance', 'Moto2_distance', 'Moto3_distance'] \n",
    "\n",
    "\n",
    "#had to remove 2002 - 2004\n",
    "years = ['2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018']\n",
    "\n",
    "base_url = 'http://www.motogp.com/en/Results+Statistics/'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def soup_stuff(url):\n",
    "    \"\"\"Returns a BeautifulSoup object for the provided url\"\"\"\n",
    "    response = requests.get(url)\n",
    "    soup = BeautifulSoup(response.text, 'lxml')\n",
    "    return soup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_date(soup):\n",
    "    \"\"\" Returns the date of the race, or 'n/a' if \n",
    "        information does not exist in the provided soup \"\"\"\n",
    "    find = soup.find(class_='padbot5')\n",
    "    if find is None:\n",
    "        r = 'n/a'\n",
    "    else:\n",
    "        r = ','.join(find.text.replace(',',' ').split()[-3:])\n",
    "    return r"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_tr_con(soup):\n",
    "    \"\"\" Returns the track condition during a race, or 'n/a' if \n",
    "        information does not exist in the provided soup \"\"\"\n",
    "    find = soup.find(class_='sprite_weather track_condition')\n",
    "    if find is None:\n",
    "        r = 'n/a'\n",
    "    else:\n",
    "        r = find.findNext().text.split()[2]\n",
    "    return r"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_tr_tmp(soup):\n",
    "    \"\"\" Returns the track temperature during a race, or 'n/a' if \n",
    "        information does not exist in the provided soup \"\"\"\n",
    "    find = soup.find(class_='sprite_weather ground')\n",
    "    if find is None:\n",
    "        r = 'n/a'\n",
    "    else:\n",
    "        r = find.findNext().text.split()[1]\n",
    "    return r\n",
    "\n",
    "def get_air_tmp(soup):\n",
    "    \"\"\" Returns the air temperature during a race, or 'n/a' if \n",
    "        information does not exist in the provided soup \"\"\"\n",
    "    find = soup.find(class_='sprite_weather air')\n",
    "    if find is None:\n",
    "        r = 'n/a'\n",
    "    else:\n",
    "        r = find.findNext().text.split()[1]\n",
    "    return r\n",
    "\n",
    "def get_humidity(soup):\n",
    "    \"\"\" Returns the track humidity during a race, or 'n/a' if \n",
    "        information does not exist in the provided soup \"\"\"\n",
    "    find = soup.find(class_='sprite_weather humidity')\n",
    "    if find is None:\n",
    "        r = 'n/a'\n",
    "    else:\n",
    "        r = find.findNext().text.split()[1]\n",
    "    return r\n",
    "\n",
    "def get_all_races(soup):\n",
    "    \"\"\" Returns all the races that took place in a particular season\n",
    "        for which the soup was passed in \"\"\"\n",
    "    find = soup.find(id='event')\n",
    "    if find is None:\n",
    "        r = []\n",
    "    else:\n",
    "        r = find.find_all('option')\n",
    "    return r\n",
    "\n",
    "def get_all_cats(soup):\n",
    "    \"\"\" Returns all the different categories (MotoGP, Moto2, etc.)\n",
    "        that took place at a particular track in the provided soup \"\"\"\n",
    "    find = soup.find(id='category')\n",
    "    if find is None:\n",
    "        r = []\n",
    "    else:\n",
    "        r = find.find_all('option')\n",
    "    return r\n",
    "\n",
    "def get_race_sessions(soup):\n",
    "    \"\"\" Returns all the different race sessions (RACE, RACE2, etc.)\n",
    "        that took place at a particular track in the provided soup \"\"\"\n",
    "    find = soup.find(id='session')\n",
    "    r = []\n",
    "    if find is None:\n",
    "        return r\n",
    "    else:\n",
    "        r2 = find.find_all('option')\n",
    "        for s in r2:\n",
    "            if s.text.find('RACE') > -1:\n",
    "                r.append(s.text.replace('E',''))\n",
    "        return r"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_all_stats(soup, year, trk, track, cat, ssn):\n",
    "    \n",
    "    if soup.find('tbody') is None:\n",
    "        return [dict(zip(headers, [year, trk, track, cat, ssn]+['n/a']*(len(headers)-3)))]\n",
    "    else:\n",
    "        riders = soup.find('tbody').find_all('a')\n",
    "        stats_to_return = []\n",
    "\n",
    "        # raceday stats\n",
    "        date = get_date(soup)\n",
    "        tr_con = get_tr_con(soup)\n",
    "        tr_tmp = get_tr_tmp(soup)\n",
    "        air_tmp = get_air_tmp(soup)\n",
    "        humid = get_humidity(soup)\n",
    "        \n",
    "        # rider stats\n",
    "        for r in riders:\n",
    "            pos = r.findPrevious().findPrevious().findPrevious().findPrevious().text\n",
    "            if pos=='':\n",
    "                pos='crash'\n",
    "            else:\n",
    "                pos=int(pos)    \n",
    "            points = r.findPrevious().findPrevious().findPrevious().text\n",
    "            if points=='':\n",
    "                points=0\n",
    "            else:\n",
    "                points=float(points)\n",
    "            r_num = r.findPrevious().findPrevious().text\n",
    "            if r_num != '':\n",
    "                r_num = int(r_num)\n",
    "            r_nam = r.text\n",
    "            r_nat = r.findNext().text\n",
    "            team = r.findNext().findNext().text\n",
    "            bike = r.findNext().findNext().findNext().text\n",
    "            avgspd = r.findNext().findNext().findNext().findNext().text\n",
    "            time = r.findNext().findNext().findNext().findNext().findNext().text\n",
    "\n",
    "            stats_dict = dict(zip(headers, [year, trk, track, cat, ssn, date, tr_con, tr_tmp, air_tmp,\n",
    "                                            humid, pos, points, r_num, r_nam, r_nat, team,\n",
    "                                            bike, avgspd, time]))\n",
    "            stats_to_return.append(stats_dict)\n",
    "\n",
    "        return stats_to_return"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2018\n",
      "QAT, ARG, AME, SPA, FRA, ITA, CAT, NED, GER, CZE, AUT, GBR, RSM, ARA, THA, JPN, AUS, MAL, VAL, 2017\n",
      "QAT, ARG, AME, SPA, FRA, ITA, CAT, NED, GER, CZE, AUT, GBR, RSM, ARA, JPN, AUS, MAL, VAL, 2016\n",
      "QAT, ARG, AME, SPA, FRA, ITA, CAT, NED, GER, AUT, CZE, GBR, RSM, ARA, JPN, AUS, MAL, VAL, 2015\n",
      "QAT, AME, ARG, SPA, FRA, ITA, CAT, NED, GER, INP, CZE, GBR, RSM, ARA, JPN, AUS, MAL, VAL, 2014\n",
      "QAT, AME, ARG, SPA, FRA, ITA, CAT, NED, GER, INP, CZE, GBR, RSM, ARA, JPN, AUS, MAL, VAL, 2013\n",
      "QAT, AME, SPA, FRA, ITA, CAT, NED, GER, USA, INP, CZE, GBR, RSM, ARA, MAL, AUS, JPN, VAL, 2012\n",
      "QAT, SPA, POR, FRA, CAT, GBR, NED, GER, ITA, USA, INP, CZE, RSM, ARA, JPN, MAL, AUS, VAL, 2011\n",
      "QAT, SPA, POR, FRA, CAT, GBR, NED, ITA, GER, USA, CZE, INP, RSM, ARA, JPN, AUS, MAL, VAL, 2010\n",
      "QAT, SPA, FRA, ITA, GBR, NED, CAT, GER, USA, CZE, INP, RSM, ARA, JPN, MAL, AUS, POR, VAL, 2009\n",
      "QAT, JPN, SPA, FRA, ITA, CAT, NED, USA, GER, GBR, CZE, INP, RSM, POR, AUS, MAL, VAL, 2008\n",
      "QAT, SPA, POR, CHN, FRA, ITA, CAT, GBR, NED, GER, USA, CZE, RSM, INP, JPN, AUS, MAL, VAL, 2007\n",
      "QAT, SPA, TUR, CHN, FRA, ITA, CAT, GBR, NED, GER, USA, CZE, RSM, POR, JPN, AUS, MAL, VAL, 2006\n",
      "SPA, QAT, TUR, CHN, FRA, ITA, CAT, NED, GBR, GER, USA, CZE, MAL, AUS, JPN, POR, VAL, 2005\n",
      "SPA, POR, CHN, FRA, ITA, CAT, NED, USA, GBR, GER, CZE, JPN, MAL, QAT, AUS, TUR, VAL, 2004\n",
      "RSA, SPA, FRA, ITA, CAT, NED, RIO, GER, GBR, CZE, POR, JPN, QAT, MAL, AUS, VAL, 2003\n",
      "JPN, RSA, SPA, FRA, ITA, CAT, NED, GBR, GER, CZE, POR, RIO, PAC, MAL, AUS, VAL, 2002\n",
      "JPN, RSA, SPA, FRA, ITA, CAT, NED, GBR, GER, CZE, POR, RIO, PAC, MAL, AUS, VAL, >> Scraping complete!\n"
     ]
    }
   ],
   "source": [
    "# loop through all parameters\n",
    "\n",
    "for yr in reversed(years):\n",
    "    data_list = []\n",
    "    soup_yr = soup_stuff(base_url + yr)\n",
    "    races = get_all_races(soup_yr)\n",
    "    print(yr)\n",
    "    \n",
    "    for rc in races:\n",
    "        TRK = rc['value']\n",
    "        Track = rc['title']\n",
    "        print(TRK, end=\", \")\n",
    "        url_rc = base_url +yr +'/' +TRK +'/'\n",
    "        soup_rc = soup_stuff(url_rc)\n",
    "        categories = get_all_cats(soup_rc)\n",
    "        \n",
    "        for cat in categories:\n",
    "            CAT = cat.text\n",
    "            url_c = base_url +yr +'/' +TRK +'/' + CAT + '/'\n",
    "            soup_c = soup_stuff(url_c)\n",
    "            sessions = get_race_sessions(soup_c)\n",
    "            \n",
    "            for ssn in sessions:\n",
    "                SSN = ssn\n",
    "                url_ssn = base_url +yr +'/' +TRK +'/' + CAT + '/' + SSN + '/Classification'\n",
    "                soup_ssn = soup_stuff(url_ssn)\n",
    "                data_list.extend(get_all_stats(soup_ssn, yr, TRK, Track, CAT, SSN))\n",
    "                time.sleep(1+np.random.random())\n",
    "    \n",
    "    df = pd.DataFrame(data_list, columns=headers)\n",
    "    #fn = '/Archive/' + yr + '_data.csv'\n",
    "    df.to_csv(\"race_results.csv\")\n",
    "    #print(fn)\n",
    "    time.sleep(1+np.random.random())\n",
    "\n",
    "print('>> Scraping complete!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "2018 - QAT, ARG, AME, SPA, FRA, ITA, CAT, NED, GER, CZE, AUT, GBR, RSM, ARA, THA, JPN, AUS, MAL, VAL, \n",
      "2017 - QAT, ARG, AME, SPA, FRA, ITA, CAT, NED, GER, CZE, AUT, GBR, RSM, ARA, JPN, AUS, MAL, VAL, \n",
      "2016 - QAT, ARG, AME, SPA, FRA, ITA, CAT, NED, GER, AUT, CZE, GBR, RSM, ARA, JPN, AUS, MAL, VAL, \n",
      "2015 - QAT, AME, ARG, SPA, FRA, ITA, CAT, NED, GER, INP, CZE, GBR, RSM, ARA, JPN, AUS, MAL, VAL, \n",
      "2014 - QAT, AME, ARG, SPA, FRA, ITA, CAT, NED, GER, INP, CZE, GBR, RSM, ARA, JPN, AUS, MAL, VAL, \n",
      "2013 - QAT, AME, SPA, FRA, ITA, CAT, NED, GER, USA, INP, CZE, GBR, RSM, ARA, MAL, AUS, JPN, VAL, \n",
      "2012 - QAT, SPA, POR, FRA, CAT, GBR, NED, GER, ITA, USA, INP, CZE, RSM, ARA, JPN, MAL, AUS, VAL, \n",
      "2011 - QAT, SPA, POR, FRA, CAT, GBR, NED, ITA, GER, USA, CZE, INP, RSM, ARA, JPN, AUS, MAL, VAL, \n",
      "2010 - QAT, SPA, FRA, ITA, GBR, NED, CAT, GER, USA, CZE, INP, RSM, ARA, JPN, MAL, AUS, POR, VAL, \n",
      "2009 - QAT, JPN, SPA, FRA, ITA, CAT, NED, USA, GER, GBR, CZE, INP, RSM, POR, AUS, MAL, VAL, \n",
      "2008 - QAT, SPA, POR, CHN, FRA, ITA, CAT, GBR, NED, GER, USA, CZE, RSM, INP, JPN, AUS, MAL, VAL, \n",
      "2007 - QAT, SPA, TUR, CHN, FRA, ITA, CAT, GBR, NED, GER, USA, CZE, RSM, POR, JPN, AUS, MAL, VAL, \n",
      "2006 - SPA, QAT, TUR, CHN, FRA, ITA, CAT, NED, GBR, GER, USA, CZE, MAL, AUS, JPN, POR, VAL, \n",
      "2005 - SPA, POR, CHN, FRA, ITA, CAT, NED, USA, GBR, GER, CZE, JPN, MAL, QAT, AUS, TUR, VAL, \n",
      "2004 - RSA, SPA, FRA, ITA, CAT, NED, RIO, GER, GBR, CZE, POR, JPN, QAT, MAL, AUS, VAL, \n",
      "2003 - JPN, RSA, SPA, FRA, ITA, CAT, NED, GBR, GER, CZE, POR, RIO, PAC, MAL, AUS, VAL, \n",
      "2002 - JPN, RSA, SPA, FRA, ITA, CAT, NED, GBR, GER, CZE, POR, RIO, PAC, MAL, AUS, VAL, "
     ]
    }
   ],
   "source": [
    "# first, get all tracks from 2002-2018\n",
    "track_list = []\n",
    "GPs_list = []\n",
    "track_names = []\n",
    "\n",
    "for yr in reversed(years):\n",
    "    soup_yr = soup_stuff(base_url + yr)\n",
    "    races = get_all_races(soup_yr)\n",
    "    print('')\n",
    "    print(yr, end = \" - \")\n",
    "    \n",
    "    for rc in races:\n",
    "        TRK = rc['value']\n",
    "        Track = rc['title']\n",
    "        print(TRK, end=\", \")\n",
    "        track_list.append(TRK)\n",
    "        GPs_list.append(Track.split(' - ')[0])\n",
    "        track_names.append(Track.split(' - ')[1])\n",
    "        \n",
    "    time.sleep(1+np.random.random())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# extract the unique ones \n",
    "combined_list = []\n",
    "for index, item in enumerate(track_list):\n",
    "    combined_list.append(item+' - '+track_names[index])\n",
    "combined_track_set = set(combined_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "#combined_track_set = combined_track_set.remove(\"JPN - Suzuka Circuit\")\n",
    "#combined_track_set = combined_track_set.remove(\"RSA - Phakisa Freeway\")\n",
    "#combined_track_set = combined_track_set.remove(\"ITA - Autodromo Internazionale del Mugello':'Italy\")\n",
    "combined_track_set = combined_track_set.remove(')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Manually inserting tracks that lack a URL \n",
    "\n",
    "track_url_dict = {'AME - Circuit Of The Americas':'Americas',\n",
    "                  'ARA - MotorLand Aragón':'Aragon',\n",
    "                  'ARG - Termas de Río Hondo':'Argentina',\n",
    "                  'AUS - Phillip Island':'Australia',\n",
    "                  'AUT - Red Bull Ring – Spielberg':'Austria',\n",
    "                  'CAT - Circuit de Barcelona-Catalunya':'Catalunya',\n",
    "                  'CHN - Shanghai Circuit':0,\n",
    "                  'CZE - Automotodrom Brno':'Czech+Republic',\n",
    "                  'FRA - Le Mans':'France',\n",
    "                  'GBR - Donington Park Circuit':0,\n",
    "                  'GBR - Silverstone Circuit':'Great+Britain',\n",
    "                  'GER - Sachsenring':'Germany',\n",
    "                  'INP - Indianapolis Motor Speedway':0,\n",
    "                  'ITA - Autodromo del Mugello':'Italy',\n",
    "                  'JPN - Twin Ring Motegi':'Japan',\n",
    "                  'MAL - Sepang International Circuit':'Malaysia',\n",
    "                  'NED - TT Circuit Assen':'Netherlands',\n",
    "                  'THA - Chang International Circuit' : 'Thailand',\n",
    "                  'POR - Estoril Circuit':0,\n",
    "                  'QAT - Losail International Circuit':'Qatar',\n",
    "                  'RIO - Nelson Piquet Circuit': 0,\n",
    "                  'RSM - Misano World Circuit Marco Simoncelli':'San+Marino',\n",
    "                  'SPA - Circuito de Jerez':'Spain',\n",
    "                  'TUR - Istanbul Circuit':0,\n",
    "                  'USA - Mazda Raceway Laguna Seca':0,\n",
    "                  'VAL - Circuit Ricardo Tormo':'Valencia'    \n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "# functions to get basic track info\n",
    "def get_GP_info(track_url_str):\n",
    "    \"\"\"\n",
    "    Returns a list with track length, number of left corners, number of right corners,\n",
    "    track width, and length of longest straight. For any unavailable values, it returns\n",
    "    'n/a' instead of a float or int.\n",
    "    \"\"\"\n",
    "    url = 'http://www.motogp.com/en/event/' + track_url_str + '#info-track'\n",
    "    soupy = soup_stuff(url)\n",
    "    attributes = soupy.find(id='circuit_numbers').find_all(class_='circuit_number_content')\n",
    "    strs = []\n",
    "    list_data = []\n",
    "    \n",
    "    for s in range(len(attributes)):\n",
    "        strs.append(attributes[s].text)\n",
    "\n",
    "    if float(strs[0].split()[0])==0:\n",
    "        list_data.append('n/a')\n",
    "    else:\n",
    "        list_data.append(float(strs[0].split()[0]))\n",
    "\n",
    "    if strs[1]=='':\n",
    "        list_data.append('n/a')\n",
    "    else:\n",
    "        list_data.append(int(strs[1]))\n",
    "    \n",
    "    if strs[2]=='':\n",
    "        list_data.append('n/a')\n",
    "    else:\n",
    "        list_data.append(int(strs[2]))\n",
    "    \n",
    "    if len(strs[3].split())==1:\n",
    "        list_data.append('n/a')\n",
    "    else:\n",
    "        list_data.append(float(strs[3].split()[0]))\n",
    "    \n",
    "    if len(strs[4].split())==1:\n",
    "        list_data.append('n/a')\n",
    "    else:\n",
    "        list_data.append(float(strs[4].split()[0]))\n",
    "\n",
    "    return list_data\n",
    "\n",
    "def get_GP_info_additional(track_url_str):\n",
    "    \"\"\"\n",
    "    Returns MotoGP average speed, MotoGP distance, Moto2 distance,\n",
    "    and Moto3 distance for the particular track. If data does not exist,\n",
    "    it returns 'n/a' in place of a float or int.\n",
    "    \"\"\"\n",
    "    url = 'http://www.motogp.com/en/event/' + track_url_str + '#info-track'\n",
    "    soupy = soup_stuff(url)\n",
    "    \n",
    "    # MotoGP average speed\n",
    "    avg_speed_str = soupy.find(class_='c-statistics__speed-item').text\n",
    "    if avg_speed_str == '-' or avg_speed_str == '':\n",
    "        avg_speed = 'n/a'\n",
    "    else:\n",
    "        avg_speed = float(avg_speed_str)\n",
    "    \n",
    "    attributes = soupy.find(class_='c-event__row-item col-xs-12 col-lg-7 col-lg-pull-5').find_all(class_='c-laps__item')\n",
    "    \n",
    "    # MotoGP distance\n",
    "    GP_dist = attributes[1].text.split()[0]\n",
    "    GP_dist = float(GP_dist)\n",
    "    if GP_dist==0: GP_dist='n/a'\n",
    "        \n",
    "     # Moto2 distance\n",
    "    m2_dist = attributes[4].text.split()[0]\n",
    "    m2_dist = float(m2_dist)    \n",
    "    if m2_dist==0: m2_dist='n/a'\n",
    "        \n",
    "     # Moto3 distance\n",
    "    m3_dist = attributes[7].text.split()[0]\n",
    "    m3_dist = float(m3_dist)   \n",
    "    if m3_dist==0: m3_dist='n/a'\n",
    "        \n",
    "    return [avg_speed, GP_dist, m2_dist, m3_dist]\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "////////////////////////////Complete!\n"
     ]
    }
   ],
   "source": [
    "# make a list of dictionaries for track information\n",
    "headers_2 = ['GP','track_length_km','l_corners','r_corners',\n",
    "           'width_m','straight_m','GP_avg_speed','gp_dist',\n",
    "           'm2_dist','m3_dist']\n",
    "\n",
    "track_data = []\n",
    "for track in combined_track_set:\n",
    "    if track_url_dict[track] != 0:\n",
    "        print('//', end='')\n",
    "        l_GP, L_c, R_c, wid, strt = get_GP_info(track_url_dict[track])\n",
    "        GP_avg_spd, gp_d, m2_d, m3_d = get_GP_info_additional(track_url_dict[track])\n",
    "        track_dict = dict(zip(headers2, [track,l_GP,L_c,R_c,wid,strt,GP_avg_spd,gp_d,m2_d,m3_d]))\n",
    "        track_data.append(track_dict)\n",
    "        time.sleep(1+np.random.random())\n",
    "print('Complete!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "118.4\n"
     ]
    }
   ],
   "source": [
    "# url = 'http://www.motogp.com/en/event/Qatar'\n",
    "# soupy = soup_stuff(url)\n",
    "# attributes = soupy.find(class_='c-event__row-item col-xs-12 col-lg-7 col-lg-pull-5').find_all(class_='c-laps__item')\n",
    "# GP_dist = float(attributes[1].text.split()[0])\n",
    "# if GP_dist==0: GP_dist='n/a'\n",
    "# print(GP_dist)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "combined_track_set.remove('AUS - Phillip Island')\n",
    "combined_track_set.remove('AUT - Red Bull Ring')\n",
    "combined_track_set.remove('RIO - Nelson Piquet Circuit')\n",
    "combined_track_set.remove('THA - Chang International Circuit')\n",
    "combined_track_set.remove('PAC - Twin Ring Motegi')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "# manually add in the info for tracks which have a 0 in the track_url_dict\n",
    "# information is from archived PDFs like the one at this following link\n",
    "# http://resources.motogp.com/files/results/2006/CHN/circuit+information.pdf?v1_96143780\n",
    "\n",
    "\n",
    "dict_austria = {'Track' : 'AUT - Red Bull Ring', 'MotoGP_avg_speed' : 182.8, 'GP_disttance' : 120.9, \n",
    "                'Left_Corners' : 3.0, 'Moto2_distance' : 108.0, ' Moto3_distance' : 99.3, 'Right_Corners' : 7.0, \n",
    "                'length of longest straight' : 626.0, 'Trk Length':4.3, 'track_width':13.0}\n",
    "\n",
    "dict_shanghai = {'Track' : 'CHN - Shanghai Circuit', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 7.0, 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 7.0, \n",
    "                'length of longest straight' : 1202.0, 'Trk Length':5.281, 'track_width':14.0}\n",
    "\n",
    "dict_donington = {'Track' : 'GBR - Donington Park Circuit', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 4.0, 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 7.0, \n",
    "                'length of longest straight' : 564.0, 'Trk Length':4.023, 'track_width':10.0}\n",
    "\n",
    "dict_indianapolis = {'Track' : 'INP - Indianapolis Motor Speedway', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 10.0, 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 6.0, \n",
    "                'length of longest straight' : 644.0, 'Trk Length':4.216, 'track_width':16.0}\n",
    "\n",
    "dict_estoril = {'Track' : 'POR - Estoril Circuitt', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 4.0, 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 9.0, \n",
    "                'length of longest straight' : 986.0, 'Trk Length':4.182, 'track_width':14.0}\n",
    "\n",
    "dict_istanbul = {'Track' : 'TUR - Istanbul Circuit', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 8.0, 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 6.0, \n",
    "                'length of longest straight' : 720.0, 'Trk Length':5.340, 'track_width':21.0}\n",
    "\n",
    "dict_laguna = {'Track' : 'USA - Mazda Raceway Laguna Seca', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 7.0, 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 4.0, \n",
    "                'length of longest straight' : 966.0, 'Trk Length':3.610, 'track_width':15.0}\n",
    "\n",
    "dict_australia = {'Track' : 'AUS - Phillip Island', 'MotoGP_avg_speed' : 176.3, 'GP_disttance' : 120.1, \n",
    "                'Left_Corners' : 7.0, 'Moto2_distance' : 111.2, ' Moto3_distance' : 102.3, 'Right_Corners' : 5.0, \n",
    "                'length of longest straight' : 900.0, 'Trk Length':4.4, 'track_width':13.0}\n",
    "\n",
    "dict_brazil = {'Track' : 'RIO - Autódromo Internacional Nelson Piquet', 'MotoGP_avg_speed' : 'n/a', 'GP_disttance' : 'n/a', \n",
    "                'Left_Corners' : 6.0 , 'Moto2_distance' : 'n/a', ' Moto3_distance' : 'n/a', 'Right_Corners' : 6.0, \n",
    "                'length of longest straight' : 'n/a', 'Trk Length': 5.031, 'track_width':'n/a'}\n",
    "\n",
    "dict_Thai = {'Track' : 'THA - Chang International Circuit', 'MotoGP_avg_speed' : 177.9, 'GP_disttance' : 118.4, \n",
    "                'Left_Corners' : 5.0, 'Moto2_distance' : 109.3, ' Moto3_distance' : 100.2, 'Right_Corners' : 7.0, \n",
    "                'length of longest straight' : 1000.0, 'Trk Length':4.6, 'track_width':12.0}\n",
    "\n",
    "dict_motegi = {'Track' : 'PAC - Twin Ring Motegi', 'MotoGP_avg_speed' : 162.2, 'GP_disttance' : 115.2, \n",
    "                'Left_Corners' : 6.0, 'Moto2_distance' : 105.6, ' Moto3_distance' : 96.0, 'Right_Corners' : 8.0, \n",
    "                'length of longest straight' : 762.0, 'Trk Length':4.8, 'track_width':15.0}\n",
    "\n",
    "\n",
    "\n",
    "track_data.append(dict_shanghai)\n",
    "track_data.append(dict_donington)\n",
    "track_data.append(dict_indianapolis)\n",
    "track_data.append(dict_estoril)\n",
    "track_data.append(dict_istanbul)\n",
    "track_data.append(dict_laguna)\n",
    "track_data.append(dict_australia)\n",
    "track_data.append(dict_brazil)\n",
    "track_data.append(dict_Thai)\n",
    "track_data.append(dict_motegi)\n",
    "track_data.append(dict_austria)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "#create dataframe from new data\n",
    "df_tracks = pd.DataFrame(track_data, columns=headers2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Track</th>\n",
       "      <th>Trk Length</th>\n",
       "      <th>Left_Corners</th>\n",
       "      <th>Right_Corners</th>\n",
       "      <th>track_width</th>\n",
       "      <th>length of longest straight</th>\n",
       "      <th>MotoGP_avg_speed</th>\n",
       "      <th>GP_distance</th>\n",
       "      <th>Moto2_distance</th>\n",
       "      <th>Moto3_distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>GBR - Silverstone Circuit</td>\n",
       "      <td>5.900</td>\n",
       "      <td>8.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>15</td>\n",
       "      <td>770</td>\n",
       "      <td>n/a</td>\n",
       "      <td>118.0</td>\n",
       "      <td>106.2</td>\n",
       "      <td>100.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NED - TT Circuit Assen</td>\n",
       "      <td>4.500</td>\n",
       "      <td>6.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>14</td>\n",
       "      <td>487</td>\n",
       "      <td>173.1</td>\n",
       "      <td>118.1</td>\n",
       "      <td>109</td>\n",
       "      <td>99.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ARA - MotorLand Aragón</td>\n",
       "      <td>5.100</td>\n",
       "      <td>10.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>15</td>\n",
       "      <td>968</td>\n",
       "      <td>167</td>\n",
       "      <td>116.8</td>\n",
       "      <td>106.6</td>\n",
       "      <td>96.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>QAT - Losail International Circuit</td>\n",
       "      <td>5.400</td>\n",
       "      <td>6.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>12</td>\n",
       "      <td>1068</td>\n",
       "      <td>166.6</td>\n",
       "      <td>118.4</td>\n",
       "      <td>107.6</td>\n",
       "      <td>96.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AME - Circuit Of The Americas</td>\n",
       "      <td>5.500</td>\n",
       "      <td>11.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>15</td>\n",
       "      <td>1200</td>\n",
       "      <td>158.4</td>\n",
       "      <td>110.3</td>\n",
       "      <td>99.2</td>\n",
       "      <td>93.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ARG - Termas de Río Hondo</td>\n",
       "      <td>4.800</td>\n",
       "      <td>5.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>16</td>\n",
       "      <td>1076</td>\n",
       "      <td>172.7</td>\n",
       "      <td>120.2</td>\n",
       "      <td>110.5</td>\n",
       "      <td>100.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>RSM - Misano World Circuit Marco Simoncelli</td>\n",
       "      <td>4.200</td>\n",
       "      <td>6.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>14</td>\n",
       "      <td>530</td>\n",
       "      <td>162.6</td>\n",
       "      <td>114.1</td>\n",
       "      <td>105.7</td>\n",
       "      <td>97.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>CZE - Automotodrom Brno</td>\n",
       "      <td>5.400</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>15</td>\n",
       "      <td>636</td>\n",
       "      <td>165.5</td>\n",
       "      <td>113.5</td>\n",
       "      <td>102.7</td>\n",
       "      <td>97.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>GER - Sachsenring</td>\n",
       "      <td>3.700</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>12</td>\n",
       "      <td>700</td>\n",
       "      <td>160.6</td>\n",
       "      <td>110.1</td>\n",
       "      <td>102.8</td>\n",
       "      <td>99.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>CAT - Circuit de Barcelona-Catalunya</td>\n",
       "      <td>4.600</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>12</td>\n",
       "      <td>1047</td>\n",
       "      <td>164.4</td>\n",
       "      <td>111.0</td>\n",
       "      <td>101.8</td>\n",
       "      <td>97.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>VAL - Circuit Ricardo Tormo</td>\n",
       "      <td>4.000</td>\n",
       "      <td>9.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>12</td>\n",
       "      <td>876</td>\n",
       "      <td>139.8</td>\n",
       "      <td>108.1</td>\n",
       "      <td>100.1</td>\n",
       "      <td>92.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>MAL - Sepang International Circuit</td>\n",
       "      <td>5.500</td>\n",
       "      <td>5.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16</td>\n",
       "      <td>920</td>\n",
       "      <td>164</td>\n",
       "      <td>110.9</td>\n",
       "      <td>99.8</td>\n",
       "      <td>94.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>SPA - Circuito de Jerez</td>\n",
       "      <td>4.400</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>607</td>\n",
       "      <td>161.2</td>\n",
       "      <td>110.6</td>\n",
       "      <td>101.7</td>\n",
       "      <td>97.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>FRA - Le Mans</td>\n",
       "      <td>4.200</td>\n",
       "      <td>5.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>13</td>\n",
       "      <td>674</td>\n",
       "      <td>161.8</td>\n",
       "      <td>113.0</td>\n",
       "      <td>104.6</td>\n",
       "      <td>92.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>CHN - Shanghai Circuit</td>\n",
       "      <td>5.281</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>1202</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>GBR - Donington Park Circuit</td>\n",
       "      <td>4.023</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>564</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>INP - Indianapolis Motor Speedway</td>\n",
       "      <td>4.216</td>\n",
       "      <td>10.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "      <td>644</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>POR - Estoril Circuitt</td>\n",
       "      <td>4.182</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>986</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>TUR - Istanbul Circuit</td>\n",
       "      <td>5.340</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21</td>\n",
       "      <td>720</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>USA - Mazda Raceway Laguna Seca</td>\n",
       "      <td>3.610</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>966</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>USA - Mazda Raceway Laguna Seca</td>\n",
       "      <td>3.610</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>966</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>CHN - Shanghai Circuit</td>\n",
       "      <td>5.281</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>1202</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>GBR - Donington Park Circuit</td>\n",
       "      <td>4.023</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>564</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>INP - Indianapolis Motor Speedway</td>\n",
       "      <td>4.216</td>\n",
       "      <td>10.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16</td>\n",
       "      <td>644</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>POR - Estoril Circuitt</td>\n",
       "      <td>4.182</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14</td>\n",
       "      <td>986</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>TUR - Istanbul Circuit</td>\n",
       "      <td>5.340</td>\n",
       "      <td>8.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21</td>\n",
       "      <td>720</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>USA - Mazda Raceway Laguna Seca</td>\n",
       "      <td>3.610</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15</td>\n",
       "      <td>966</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>AUS - Phillip Island</td>\n",
       "      <td>4.400</td>\n",
       "      <td>7.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "      <td>900</td>\n",
       "      <td>176.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>111.2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>RIO - Autódromo Internacional Nelson Piquet</td>\n",
       "      <td>5.031</td>\n",
       "      <td>6.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>THA - Chang International Circuit</td>\n",
       "      <td>4.600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12</td>\n",
       "      <td>1000</td>\n",
       "      <td>177.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>109.3</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>POR - Estoril Circuitt</td>\n",
       "      <td>4.182</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>14</td>\n",
       "      <td>986</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>TUR - Istanbul Circuit</td>\n",
       "      <td>5.340</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>21</td>\n",
       "      <td>720</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>USA - Mazda Raceway Laguna Seca</td>\n",
       "      <td>3.610</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>15</td>\n",
       "      <td>966</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>AUS - Phillip Island</td>\n",
       "      <td>4.400</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13</td>\n",
       "      <td>900</td>\n",
       "      <td>176.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>111.2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>RIO - Autódromo Internacional Nelson Piquet</td>\n",
       "      <td>5.031</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>THA - Chang International Circuit</td>\n",
       "      <td>4.600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>12</td>\n",
       "      <td>1000</td>\n",
       "      <td>177.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>109.3</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>PAC - Twin Ring Motegi</td>\n",
       "      <td>4.800</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>15</td>\n",
       "      <td>762</td>\n",
       "      <td>162.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>105.6</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>AUT - Red Bull Ring</td>\n",
       "      <td>4.300</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>13</td>\n",
       "      <td>626</td>\n",
       "      <td>182.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>108</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>CHN - Shanghai Circuit</td>\n",
       "      <td>5.281</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>14</td>\n",
       "      <td>1202</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>GBR - Donington Park Circuit</td>\n",
       "      <td>4.023</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10</td>\n",
       "      <td>564</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>INP - Indianapolis Motor Speedway</td>\n",
       "      <td>4.216</td>\n",
       "      <td>10.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>16</td>\n",
       "      <td>644</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>POR - Estoril Circuitt</td>\n",
       "      <td>4.182</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>14</td>\n",
       "      <td>986</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>TUR - Istanbul Circuit</td>\n",
       "      <td>5.340</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>21</td>\n",
       "      <td>720</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>USA - Mazda Raceway Laguna Seca</td>\n",
       "      <td>3.610</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>15</td>\n",
       "      <td>966</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>AUS - Phillip Island</td>\n",
       "      <td>4.400</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13</td>\n",
       "      <td>900</td>\n",
       "      <td>176.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>111.2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>RIO - Autódromo Internacional Nelson Piquet</td>\n",
       "      <td>5.031</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>THA - Chang International Circuit</td>\n",
       "      <td>4.600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>12</td>\n",
       "      <td>1000</td>\n",
       "      <td>177.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>109.3</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>PAC - Twin Ring Motegi</td>\n",
       "      <td>4.800</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>15</td>\n",
       "      <td>762</td>\n",
       "      <td>162.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>105.6</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>AUT - Red Bull Ring</td>\n",
       "      <td>4.300</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>13</td>\n",
       "      <td>626</td>\n",
       "      <td>182.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>108</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>CHN - Shanghai Circuit</td>\n",
       "      <td>5.281</td>\n",
       "      <td>7.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>14</td>\n",
       "      <td>1202</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>GBR - Donington Park Circuit</td>\n",
       "      <td>4.023</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10</td>\n",
       "      <td>564</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>INP - Indianapolis Motor Speedway</td>\n",
       "      <td>4.216</td>\n",
       "      <td>10.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>16</td>\n",
       "      <td>644</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>POR - Estoril Circuitt</td>\n",
       "      <td>4.182</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>14</td>\n",
       "      <td>986</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>TUR - Istanbul Circuit</td>\n",
       "      <td>5.340</td>\n",
       "      <td>8.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>21</td>\n",
       "      <td>720</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>USA - Mazda Raceway Laguna Seca</td>\n",
       "      <td>3.610</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>15</td>\n",
       "      <td>966</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>AUS - Phillip Island</td>\n",
       "      <td>4.400</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>13</td>\n",
       "      <td>900</td>\n",
       "      <td>176.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>111.2</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>RIO - Autódromo Internacional Nelson Piquet</td>\n",
       "      <td>5.031</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "      <td>n/a</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>THA - Chang International Circuit</td>\n",
       "      <td>4.600</td>\n",
       "      <td>5.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>12</td>\n",
       "      <td>1000</td>\n",
       "      <td>177.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>109.3</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>PAC - Twin Ring Motegi</td>\n",
       "      <td>4.800</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>15</td>\n",
       "      <td>762</td>\n",
       "      <td>162.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>105.6</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>AUT - Red Bull Ring</td>\n",
       "      <td>4.300</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>13</td>\n",
       "      <td>626</td>\n",
       "      <td>182.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>108</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Track  Trk Length  Left_Corners  \\\n",
       "0                     GBR - Silverstone Circuit       5.900           8.0   \n",
       "1                        NED - TT Circuit Assen       4.500           6.0   \n",
       "2                        ARA - MotorLand Aragón       5.100          10.0   \n",
       "3            QAT - Losail International Circuit       5.400           6.0   \n",
       "4                 AME - Circuit Of The Americas       5.500          11.0   \n",
       "5                     ARG - Termas de Río Hondo       4.800           5.0   \n",
       "6   RSM - Misano World Circuit Marco Simoncelli       4.200           6.0   \n",
       "7                       CZE - Automotodrom Brno       5.400           6.0   \n",
       "8                             GER - Sachsenring       3.700          10.0   \n",
       "9          CAT - Circuit de Barcelona-Catalunya       4.600           6.0   \n",
       "10                  VAL - Circuit Ricardo Tormo       4.000           9.0   \n",
       "11           MAL - Sepang International Circuit       5.500           5.0   \n",
       "12                      SPA - Circuito de Jerez       4.400           6.0   \n",
       "13                                FRA - Le Mans       4.200           5.0   \n",
       "14                       CHN - Shanghai Circuit       5.281           7.0   \n",
       "15                 GBR - Donington Park Circuit       4.023           4.0   \n",
       "16            INP - Indianapolis Motor Speedway       4.216          10.0   \n",
       "17                       POR - Estoril Circuitt       4.182           4.0   \n",
       "18                       TUR - Istanbul Circuit       5.340           8.0   \n",
       "19              USA - Mazda Raceway Laguna Seca       3.610           7.0   \n",
       "20              USA - Mazda Raceway Laguna Seca       3.610           7.0   \n",
       "21                       CHN - Shanghai Circuit       5.281           7.0   \n",
       "22                 GBR - Donington Park Circuit       4.023           4.0   \n",
       "23            INP - Indianapolis Motor Speedway       4.216          10.0   \n",
       "24                       POR - Estoril Circuitt       4.182           4.0   \n",
       "25                       TUR - Istanbul Circuit       5.340           8.0   \n",
       "26              USA - Mazda Raceway Laguna Seca       3.610           7.0   \n",
       "27                         AUS - Phillip Island       4.400           7.0   \n",
       "28  RIO - Autódromo Internacional Nelson Piquet       5.031           6.0   \n",
       "29            THA - Chang International Circuit       4.600           5.0   \n",
       "..                                          ...         ...           ...   \n",
       "46                       POR - Estoril Circuitt       4.182           4.0   \n",
       "47                       TUR - Istanbul Circuit       5.340           8.0   \n",
       "48              USA - Mazda Raceway Laguna Seca       3.610           7.0   \n",
       "49                         AUS - Phillip Island       4.400           7.0   \n",
       "50  RIO - Autódromo Internacional Nelson Piquet       5.031           6.0   \n",
       "51            THA - Chang International Circuit       4.600           5.0   \n",
       "52                       PAC - Twin Ring Motegi       4.800           6.0   \n",
       "53                          AUT - Red Bull Ring       4.300           3.0   \n",
       "54                       CHN - Shanghai Circuit       5.281           7.0   \n",
       "55                 GBR - Donington Park Circuit       4.023           4.0   \n",
       "56            INP - Indianapolis Motor Speedway       4.216          10.0   \n",
       "57                       POR - Estoril Circuitt       4.182           4.0   \n",
       "58                       TUR - Istanbul Circuit       5.340           8.0   \n",
       "59              USA - Mazda Raceway Laguna Seca       3.610           7.0   \n",
       "60                         AUS - Phillip Island       4.400           7.0   \n",
       "61  RIO - Autódromo Internacional Nelson Piquet       5.031           6.0   \n",
       "62            THA - Chang International Circuit       4.600           5.0   \n",
       "63                       PAC - Twin Ring Motegi       4.800           6.0   \n",
       "64                          AUT - Red Bull Ring       4.300           3.0   \n",
       "65                       CHN - Shanghai Circuit       5.281           7.0   \n",
       "66                 GBR - Donington Park Circuit       4.023           4.0   \n",
       "67            INP - Indianapolis Motor Speedway       4.216          10.0   \n",
       "68                       POR - Estoril Circuitt       4.182           4.0   \n",
       "69                       TUR - Istanbul Circuit       5.340           8.0   \n",
       "70              USA - Mazda Raceway Laguna Seca       3.610           7.0   \n",
       "71                         AUS - Phillip Island       4.400           7.0   \n",
       "72  RIO - Autódromo Internacional Nelson Piquet       5.031           6.0   \n",
       "73            THA - Chang International Circuit       4.600           5.0   \n",
       "74                       PAC - Twin Ring Motegi       4.800           6.0   \n",
       "75                          AUT - Red Bull Ring       4.300           3.0   \n",
       "\n",
       "    Right_Corners track_width length of longest straight MotoGP_avg_speed  \\\n",
       "0            10.0          15                        770              n/a   \n",
       "1            12.0          14                        487            173.1   \n",
       "2             7.0          15                        968              167   \n",
       "3            10.0          12                       1068            166.6   \n",
       "4             9.0          15                       1200            158.4   \n",
       "5             9.0          16                       1076            172.7   \n",
       "6            10.0          14                        530            162.6   \n",
       "7             8.0          15                        636            165.5   \n",
       "8             3.0          12                        700            160.6   \n",
       "9             8.0          12                       1047            164.4   \n",
       "10            5.0          12                        876            139.8   \n",
       "11           10.0          16                        920              164   \n",
       "12            8.0          11                        607            161.2   \n",
       "13            9.0          13                        674            161.8   \n",
       "14            NaN          14                       1202              n/a   \n",
       "15            NaN          10                        564              n/a   \n",
       "16            NaN          16                        644              n/a   \n",
       "17            NaN          14                        986              n/a   \n",
       "18            NaN          21                        720              n/a   \n",
       "19            NaN          15                        966              n/a   \n",
       "20            NaN          15                        966              n/a   \n",
       "21            NaN          14                       1202              n/a   \n",
       "22            NaN          10                        564              n/a   \n",
       "23            NaN          16                        644              n/a   \n",
       "24            NaN          14                        986              n/a   \n",
       "25            NaN          21                        720              n/a   \n",
       "26            NaN          15                        966              n/a   \n",
       "27            NaN          13                        900            176.3   \n",
       "28            NaN         n/a                        n/a              n/a   \n",
       "29            NaN          12                       1000            177.9   \n",
       "..            ...         ...                        ...              ...   \n",
       "46            9.0          14                        986              n/a   \n",
       "47            6.0          21                        720              n/a   \n",
       "48            4.0          15                        966              n/a   \n",
       "49            5.0          13                        900            176.3   \n",
       "50            6.0         n/a                        n/a              n/a   \n",
       "51            7.0          12                       1000            177.9   \n",
       "52            8.0          15                        762            162.2   \n",
       "53            7.0          13                        626            182.8   \n",
       "54            7.0          14                       1202              n/a   \n",
       "55            7.0          10                        564              n/a   \n",
       "56            6.0          16                        644              n/a   \n",
       "57            9.0          14                        986              n/a   \n",
       "58            6.0          21                        720              n/a   \n",
       "59            4.0          15                        966              n/a   \n",
       "60            5.0          13                        900            176.3   \n",
       "61            6.0         n/a                        n/a              n/a   \n",
       "62            7.0          12                       1000            177.9   \n",
       "63            8.0          15                        762            162.2   \n",
       "64            7.0          13                        626            182.8   \n",
       "65            7.0          14                       1202              n/a   \n",
       "66            7.0          10                        564              n/a   \n",
       "67            6.0          16                        644              n/a   \n",
       "68            9.0          14                        986              n/a   \n",
       "69            6.0          21                        720              n/a   \n",
       "70            4.0          15                        966              n/a   \n",
       "71            5.0          13                        900            176.3   \n",
       "72            6.0         n/a                        n/a              n/a   \n",
       "73            7.0          12                       1000            177.9   \n",
       "74            8.0          15                        762            162.2   \n",
       "75            7.0          13                        626            182.8   \n",
       "\n",
       "    GP_distance Moto2_distance  Moto3_distance  \n",
       "0         118.0          106.2           100.3  \n",
       "1         118.1            109            99.9  \n",
       "2         116.8          106.6            96.5  \n",
       "3         118.4          107.6            96.8  \n",
       "4         110.3           99.2            93.7  \n",
       "5         120.2          110.5           100.9  \n",
       "6         114.1          105.7            97.2  \n",
       "7         113.5          102.7            97.3  \n",
       "8         110.1          102.8            99.1  \n",
       "9         111.0          101.8            97.2  \n",
       "10        108.1          100.1            92.1  \n",
       "11        110.9           99.8            94.2  \n",
       "12        110.6          101.7            97.3  \n",
       "13        113.0          104.6            92.1  \n",
       "14          NaN            n/a             NaN  \n",
       "15          NaN            n/a             NaN  \n",
       "16          NaN            n/a             NaN  \n",
       "17          NaN            n/a             NaN  \n",
       "18          NaN            n/a             NaN  \n",
       "19          NaN            n/a             NaN  \n",
       "20          NaN            n/a             NaN  \n",
       "21          NaN            n/a             NaN  \n",
       "22          NaN            n/a             NaN  \n",
       "23          NaN            n/a             NaN  \n",
       "24          NaN            n/a             NaN  \n",
       "25          NaN            n/a             NaN  \n",
       "26          NaN            n/a             NaN  \n",
       "27          NaN          111.2             NaN  \n",
       "28          NaN            n/a             NaN  \n",
       "29          NaN          109.3             NaN  \n",
       "..          ...            ...             ...  \n",
       "46          NaN            n/a             NaN  \n",
       "47          NaN            n/a             NaN  \n",
       "48          NaN            n/a             NaN  \n",
       "49          NaN          111.2             NaN  \n",
       "50          NaN            n/a             NaN  \n",
       "51          NaN          109.3             NaN  \n",
       "52          NaN          105.6             NaN  \n",
       "53          NaN            108             NaN  \n",
       "54          NaN            n/a             NaN  \n",
       "55          NaN            n/a             NaN  \n",
       "56          NaN            n/a             NaN  \n",
       "57          NaN            n/a             NaN  \n",
       "58          NaN            n/a             NaN  \n",
       "59          NaN            n/a             NaN  \n",
       "60          NaN          111.2             NaN  \n",
       "61          NaN            n/a             NaN  \n",
       "62          NaN          109.3             NaN  \n",
       "63          NaN          105.6             NaN  \n",
       "64          NaN            108             NaN  \n",
       "65          NaN            n/a             NaN  \n",
       "66          NaN            n/a             NaN  \n",
       "67          NaN            n/a             NaN  \n",
       "68          NaN            n/a             NaN  \n",
       "69          NaN            n/a             NaN  \n",
       "70          NaN            n/a             NaN  \n",
       "71          NaN          111.2             NaN  \n",
       "72          NaN            n/a             NaN  \n",
       "73          NaN          109.3             NaN  \n",
       "74          NaN          105.6             NaN  \n",
       "75          NaN            108             NaN  \n",
       "\n",
       "[76 rows x 10 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tracks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Racetrack_data.csv\n"
     ]
    }
   ],
   "source": [
    "fn = 'Racetrack_data.csv'\n",
    "df_tracks.to_csv(fn)\n",
    "print(fn)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
